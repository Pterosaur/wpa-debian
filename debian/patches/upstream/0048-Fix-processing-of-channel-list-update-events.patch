From 449185b0e6d45fdb27537c4b9be5a4f52d5cf29a Mon Sep 17 00:00:00 2001
From: Jouni Malinen <jouni@qca.qualcomm.com>
Date: Thu, 1 Mar 2012 17:53:53 +0200
Subject: [PATCH 48/58] Fix processing of channel list update events

Commit 6bf731e8cea4d9d41665d271b331e096c7c569e9 broke handling of
EVENT_CHANNEL_LIST_CHANGED by introducing a cached copy of the driver
channel list that does not get updated even if driver changes its list.
Fix this by synchronizing the cacched wpa_s->hw.modes information
whenever EVENT_CHANNEL_LIST_CHANGED is processed. This fixes P2P channel
list updates based on regulatory domain hints that may trigger driver to
change its supported channel list.

Signed-hostap: Jouni Malinen <jouni@qca.qualcomm.com>
intended-for: hostap-1
(cherry picked from commit 6979582ca6ff9b82c77fd81025fdcaed4f67e593)
---
 wpa_supplicant/events.c           |    5 +++++
 wpa_supplicant/wpa_supplicant.c   |    2 +-
 wpa_supplicant/wpa_supplicant_i.h |    1 +
 3 files changed, 7 insertions(+), 1 deletion(-)

--- a/wpa_supplicant/events.c
+++ b/wpa_supplicant/events.c
@@ -2413,6 +2413,11 @@ void wpa_supplicant_event(void *ctx, enu
 	case EVENT_CHANNEL_LIST_CHANGED:
 		if (wpa_s->drv_priv == NULL)
 			break; /* Ignore event during drv initialization */
+
+		free_hw_features(wpa_s);
+		wpa_s->hw.modes = wpa_drv_get_hw_feature_data(
+			wpa_s, &wpa_s->hw.num_modes, &wpa_s->hw.flags);
+
 #ifdef CONFIG_P2P
 		wpas_p2p_update_channel_list(wpa_s);
 #endif /* CONFIG_P2P */
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -370,7 +370,7 @@ void wpa_supplicant_set_non_wpa_policy(s
 }
 
 
-static void free_hw_features(struct wpa_supplicant *wpa_s)
+void free_hw_features(struct wpa_supplicant *wpa_s)
 {
 	int i;
 	if (wpa_s->hw.modes == NULL)
--- a/wpa_supplicant/wpa_supplicant_i.h
+++ b/wpa_supplicant/wpa_supplicant_i.h
@@ -558,6 +558,7 @@ int wpa_supplicant_set_bss_expiration_co
 int wpa_supplicant_set_debug_params(struct wpa_global *global,
 				    int debug_level, int debug_timestamp,
 				    int debug_show_keys);
+void free_hw_features(struct wpa_supplicant *wpa_s);
 
 void wpa_show_license(void);
 
