From: Markus Koschany <apo@debian.org>
Date: Sat, 14 May 2016 18:15:21 +0200
Subject: CVE-2016-4476

WPA/WPA2-Personal passphrase is not allowed to include control
characters. Reject a Credential received from a WPS Registrar both as
STA (Credential) and AP (AP Settings) if the credential is for WPAPSK or
WPA2PSK authentication type and includes an invalid passphrase.

This fixes an issue where hostapd or wpa_supplicant could have updated
the configuration file PSK/passphrase parameter with arbitrary data from
an external device (Registrar) that may not be fully trusted. Should
such data include a newline character, the resulting configuration file
could become invalid and fail to be parsed.

Patch by Paul Stewart, rebased for Wheezy by Markus Koschany.

Origin: https://w1.fi/security/2016-1/0001-WPS-Reject-a-Credential-with-invalid-passphrase.patch
---
 src/utils/common.c         | 11 +++++++++++
 src/utils/common.h         |  1 +
 src/wps/wps_attr_process.c | 10 ++++++++++
 3 files changed, 22 insertions(+)

diff --git a/src/utils/common.c b/src/utils/common.c
index 89eca1c..38d9129 100644
--- a/src/utils/common.c
+++ b/src/utils/common.c
@@ -385,3 +385,14 @@ void * __hide_aliasing_typecast(void *foo)
 {
 	return foo;
 }
+
+int has_ctrl_char(const u8 *data, size_t len)
+{
+    size_t i;
+
+    for (i = 0; i < len; i++) {
+        if (data[i] < 32 || data[i] == 127)
+            return 1;
+    }
+    return 0;
+}
diff --git a/src/utils/common.h b/src/utils/common.h
index 14ab297..089524a 100644
--- a/src/utils/common.h
+++ b/src/utils/common.h
@@ -464,6 +464,7 @@ TCHAR * wpa_strdup_tchar(const char *str);
 #endif /* CONFIG_NATIVE_WINDOWS */
 
 const char * wpa_ssid_txt(const u8 *ssid, size_t ssid_len);
+int has_ctrl_char(const u8 *data, size_t len);
 
 static inline int is_zero_ether_addr(const u8 *a)
 {
diff --git a/src/wps/wps_attr_process.c b/src/wps/wps_attr_process.c
index 07e087d..f2ea73a 100644
--- a/src/wps/wps_attr_process.c
+++ b/src/wps/wps_attr_process.c
@@ -286,6 +286,16 @@ static int wps_workaround_cred_key(struct wps_credential *cred)
 		cred->key_len--;
 #endif /* CONFIG_WPS_STRICT */
 	}
+
+
+	if (cred->auth_type & (WPS_AUTH_WPAPSK | WPS_AUTH_WPA2PSK) &&
+	    (cred->key_len < 8 || has_ctrl_char(cred->key, cred->key_len))) {
+		wpa_printf(MSG_INFO, "WPS: Reject credential with invalid WPA/WPA2-Personal passphrase");
+		wpa_hexdump_ascii_key(MSG_INFO, "WPS: Network Key",
+				      cred->key, cred->key_len);
+		return -1;
+	}
+
 	return 0;
 }
 
