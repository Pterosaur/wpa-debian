From: Markus Koschany <apo@debian.org>
Date: Sat, 14 May 2016 18:16:31 +0200
Subject: CVE-2016-4477-part1

First part that explicitly fixes CVE-2016-4477.

Upstream's second patch

https://w1.fi/security/2016-1/0004-Reject-SET_CRED-commands-with-newline-characters-in-.patch

does not apply for Wheezy because the cred functions are not present in this
version.

WPA/WPA2-Personal passphrase is not allowed to include control
characters. Reject a passphrase configuration attempt if that passphrase
includes an invalid passphrase.

This fixes an issue where wpa_supplicant could have updated the
configuration file psk parameter with arbitrary data from the control
interface or D-Bus interface. While those interfaces are supposed to be
accessible only for trusted users/applications, it may be possible that
an untrusted user has access to a management software component that
does not validate the passphrase value before passing it to
wpa_supplicant.

This could allow such an untrusted user to inject up to 63 characters of
almost arbitrary data into the configuration file. Such configuration
file could result in wpa_supplicant trying to load a library (e.g.,
opensc_engine_path, pkcs11_engine_path, pkcs11_module_path,
load_dynamic_eap) from user controlled location when starting again.
This would allow code from that library to be executed under the
wpa_supplicant process privileges.

Patch by Jouni Malinen, rebased for Wheezy by Markus Koschany.

Origin: https://w1.fi/security/2016-1/0002-Reject-psk-parameter-set-with-invalid-passphrase-cha.patch
---
 wpa_supplicant/config.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/wpa_supplicant/config.c b/wpa_supplicant/config.c
index 600e32b..96549d3 100644
--- a/wpa_supplicant/config.c
+++ b/wpa_supplicant/config.c
@@ -349,6 +349,12 @@ static int wpa_config_parse_psk(const struct parse_data *data,
 		}
 		wpa_hexdump_ascii_key(MSG_MSGDUMP, "PSK (ASCII passphrase)",
 				      (u8 *) value, len);
+		if (has_ctrl_char((u8 *) value, len)) {
+			wpa_printf(MSG_ERROR,
+				   "Line %d: Invalid passphrase character",
+				   line);
+			return -1;
+		}
 		if (ssid->passphrase && os_strlen(ssid->passphrase) == len &&
 		    os_memcmp(ssid->passphrase, value, len) == 0)
 			return 0;
